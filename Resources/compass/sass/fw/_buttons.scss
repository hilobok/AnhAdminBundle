@import "compass/css3";

    $btnColor:                  #fff !default;
    $btnBg:                     $state_default !default;
    $btnBd:                     $btnBg !default;

    $btnBgPrimary:              $state_primary !default;
    $btnBdPrimary:              $btnBgPrimary !default;

    $btnBgSuccess:              $state_success !default;
    $btnBdSucess:               $btnBgSuccess !default;

    $btnBgWarning:              $state_warning !default;
    $btnBdWarning:              $btnBgWarning !default;

    $btnBgDanger:               $state_danger !default;
    $btnBdDanger:               $btnBgDanger !default;

    $btnBgInfo:                 $state_info !default;
    $btnBdInfo:                 $btnBgInfo !default;


// Button psuedo states
// -------------------------
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons
@mixin btn-pseudo-states($background, $border) {
  background-color: $background;
  border-color: $border;

  &:hover,
  &:focus,
  &:active {
    background-color: darken($background, 5%);
        border-color: darken($border, 10%);
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & { // TODO: should we limit this to fieldset only?
    &:hover,
    &:focus,
    &:active,
    &.active {
      background-color: $background;
          border-color: $border;
    }
  }
}

%button {
	display: inline-block;
	padding: 6px 12px; // TODO: variable?
	margin-bottom: 0; // For input.btn
	font-size: 1em;
	// font-weight: 500;
	line-height: 1;
	text-align: center;
	vertical-align: middle;
	cursor: pointer;
	border: 1px solid #eee; // TODO: variable for border width?
	border-radius: 4px; // TODO: be button specific with radius/ padding vars?
	white-space: nowrap;

	text-decoration: none;

	&:focus {
		outline: thin dotted #333;
		// Webkit
		outline: 5px auto -webkit-focus-ring-color;
		outline-offset: -2px;
	}

	&:hover,
	&:focus {
		color: #fff; // TODO: variable?
		text-decoration: none;
	}

	&:active,
	&.active {
		outline: 0;
		background-image: none;
		@include box-shadow(inset 0 3px 5px rgba(0,0,0,.125)); // TODO: mixin / variable?
	}

	&.disabled,
	&[disabled],
	fieldset[disabled] & { // TODO: do we really only want fieldsets to be the disabled containers?
		cursor: default;
		pointer-events: none; // Future-proof disabling of clicks
		@include opacity(.65); // TODO: ensure the opacity mixin can handle decimals
		@include box-shadow(none);
	}

	color: $btnColor;
	@include btn-pseudo-states($btnBg, $btnBd);
}

// Button Sizes
%button-size-large {
  padding: $paddingLarge;
  font-size: $fontSizeLarge;
  border-radius: $borderRadiusLarge;
}

%button-size-small {
  padding: $paddingSmall;
  font-size: $fontSizeSmall;
  border-radius: $borderRadiusSmall;
}

%button-size-mini {
  padding: $paddingMini;
  font-size: $fontSizeMini;
  border-radius: $borderRadiusSmall;
}


// colors
%button-color-primary {
  @include btn-pseudo-states($btnBgPrimary, $btnBdPrimary);
}
// Warning appears as orange
%button-color-warning {
  @include btn-pseudo-states($btnBgWarning, $btnBdWarning);
}
// Danger and error appear as red
%button-color-danger {
  @include btn-pseudo-states($btnBgDanger, $btnBdDanger);
}
// Success appears as green
%button-color-success {
  @include btn-pseudo-states($btnBgSuccess, $btnBdSucess);
}
// Info appears as a blue-green
%button-info {
  @include btn-pseudo-states($btnBgInfo, $btnBdInfo);
}
